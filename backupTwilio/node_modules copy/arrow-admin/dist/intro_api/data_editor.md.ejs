<h1 id="heading-data-editor"><a name="heading-data-editor">Data Editor</a></h1><p>The data editor provides a CMS-esque interface for managing data coming from Arrow models.  This document will detail how some of this works.</p>
<h3 id="heading-the-model-s-metadata-object"><a name="heading-the-model-s-metadata-object">The Model’s Metadata Object</a></h3><p>Below are the options for customizing the data editor’s interface, directly from the model.  Note that none of this<br>is required to use the data editor, however you can control the user experience and data entry by specifying the options<br>below on the model.</p>
<pre class="highlight javascript"><span class="hljs-comment">// Metadata object receives a 'cms' object with the following configuration:</span>
metadata: {
    <span class="hljs-attr">cms</span>: {
        <span class="hljs-comment">/**
         * This specfies where this model will show up in the nav menu, grouped by this category.
         */</span>
        group: <span class="hljs-string">'CRM'</span>,
        <span class="hljs-comment">/**
         * This changes the page title to a more human readable name, in case your model is oddly named.
         * If left out, it will default to the model name.
         */</span>
        readableName: <span class="hljs-string">'Customers'</span>,
        <span class="hljs-comment">/**
         * Limit the table to the specified columns.  Each value should map to a field in the model field schema.
         * If left out, all columns will be visible.
         */</span>
        defaultColumns: [<span class="hljs-string">'first_name'</span>, <span class="hljs-string">'last_name'</span>, <span class="hljs-string">'email'</span>],
        <span class="hljs-comment">/**
        * Maps to the field schema of the model
        */</span>
        fields: {
            <span class="hljs-attr">email</span>: {
                <span class="hljs-comment">// The column and form key name for this field.  Defaults to field key name if omitted.</span>
                readableName: <span class="hljs-string">'Email'</span>,
                <span class="hljs-comment">// The form field plugin to use.  Defaults to a standard textfield if omitted.</span>
                type: <span class="hljs-string">'email'</span>
            }
        }
    }
}</pre><h3 id="heading-available-field-plugins"><a name="heading-available-field-plugins">Available Field Plugins</a></h3><h4 id="heading-email"><a name="heading-email">Email</a></h4><p><code>type: &quot;email&quot;</code> is a standard textfield that validates an email address</p>
<h4 id="heading-list"><a name="heading-list">List</a></h4><p><code>type: &quot;list&quot;</code> is a select drop down with a preset number of options.  You must add a <code>options</code> array to the field to indicate the available options to choose from:</p>
<pre class="highlight javascript">location: { <span class="hljs-attr">type</span>: <span class="hljs-string">'list'</span>, <span class="hljs-attr">options</span>: [<span class="hljs-string">'Florida'</span>, <span class="hljs-string">'California'</span>, <span class="hljs-string">'Texas'</span>, <span class="hljs-string">'North Carolina'</span>] }</pre><h4 id="heading-mask"><a name="heading-mask">Mask</a></h4><p><code>type: &quot;mask&quot;</code> Will render an input text field with a required masking pattern<br>(Good for things like SSN numbers, ISBN numbers, or any format you need to enforce).</p>
<pre class="highlight javascript"><span class="hljs-comment">// This enforces a text field like "tyi-9281"</span>
code: { <span class="hljs-attr">type</span>: <span class="hljs-string">'mask'</span>, <span class="hljs-attr">mask</span>: <span class="hljs-string">'aaa-9999'</span> }</pre><p>This field type uses the <a href="https://github.com/RobinHerbots/jquery.inputmask">https://github.com/RobinHerbots/jquery.inputmask</a> plugin.  You can use any mash pattern indicated here.</p>
<h4 id="heading-date"><a name="heading-date">Date</a></h4><p><code>type: &quot;date&quot;</code> is a date picker (WIP).</p>
<h4 id="heading-number"><a name="heading-number">Number</a></h4><p><code>type: &quot;number&quot;</code> Will use a number field</p>
<h4 id="heading-range"><a name="heading-range">Range</a></h4><p><code>type: &quot;range&quot;</code> Will use a range field</p>
<h4 id="heading-url"><a name="heading-url">URL</a></h4><p><code>type: &quot;url&quot;</code> Will use a url field</p>
<h4 id="heading-tel"><a name="heading-tel">Tel</a></h4><p><code>type: &quot;tel&quot;</code> Will use a tel field</p>
<h4 id="heading-textarea"><a name="heading-textarea">Textarea</a></h4><p><code>type: &quot;textarea&quot;</code> is a text area with several rendering styles.  You can add a <code>style</code> property to the field to define how the text area should render.<br>Only current option is <code>markdown</code>.  If you leave off the style property, a native textarea will be used.</p>
<pre class="highlight javascript">notes: { <span class="hljs-attr">type</span>: <span class="hljs-string">'textarea'</span>, <span class="hljs-attr">style</span>: <span class="hljs-string">'markdown'</span> }</pre><h4 id="heading-pillbox"><a name="heading-pillbox">Pillbox</a></h4><p><code>type: &quot;pillbox&quot;</code> is a tag-like UI that will store values as an array (appropriate for array-type fields)</p>
<p>####Sample Model</p>
<pre class="highlight javascript"><span class="hljs-keyword">var</span> Arrow = <span class="hljs-built_in">require</span>(<span class="hljs-string">'arrow'</span>);

<span class="hljs-keyword">var</span> Customer = Arrow.Model.extend(<span class="hljs-string">'customer'</span>, {
    <span class="hljs-attr">fields</span>: {
        <span class="hljs-attr">first_name</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span> },
        <span class="hljs-attr">last_name</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span> },
        <span class="hljs-attr">email</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>, <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span> },
        <span class="hljs-attr">location</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span> },
        <span class="hljs-attr">joined</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span> },
        <span class="hljs-attr">notes</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span> },
        <span class="hljs-attr">assignedTo</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">Number</span> },
        <span class="hljs-attr">preferences</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">Array</span> },
        <span class="hljs-attr">website</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span> },
        <span class="hljs-attr">phone</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span> },
        <span class="hljs-attr">code</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span> },
        <span class="hljs-attr">skill</span>: { <span class="hljs-attr">type</span>: <span class="hljs-built_in">Number</span> }
    },
    <span class="hljs-attr">connector</span>: <span class="hljs-string">'appc.arrowdb'</span>,
    <span class="hljs-attr">metadata</span>: {
        <span class="hljs-attr">cms</span>: {
            <span class="hljs-attr">group</span>: <span class="hljs-string">'CRM'</span>,
            <span class="hljs-attr">readableName</span>: <span class="hljs-string">'Customers'</span>,
            <span class="hljs-attr">defaultColumns</span>: [<span class="hljs-string">'first_name'</span>, <span class="hljs-string">'last_name'</span>, <span class="hljs-string">'location'</span>],
            <span class="hljs-attr">fields</span>: {
                <span class="hljs-attr">first_name</span>: { <span class="hljs-attr">readableName</span>: <span class="hljs-string">'First Name'</span> },
                <span class="hljs-attr">last_name</span>: { <span class="hljs-attr">readableName</span>: <span class="hljs-string">'Last Name'</span> },
                <span class="hljs-attr">email</span>: { <span class="hljs-attr">readableName</span>: <span class="hljs-string">'Email'</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">'email'</span> },
                <span class="hljs-attr">location</span>: { <span class="hljs-attr">readableName</span>: <span class="hljs-string">'Location'</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">'list'</span>, <span class="hljs-attr">options</span>: [<span class="hljs-string">'Florida'</span>, <span class="hljs-string">'California'</span>, <span class="hljs-string">'Texas'</span>, <span class="hljs-string">'North Carolina'</span>] },
                <span class="hljs-attr">joined</span>: { <span class="hljs-attr">readableName</span>: <span class="hljs-string">'Joined'</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">'date'</span> },
                <span class="hljs-attr">website</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">'url'</span> },
                <span class="hljs-attr">phone</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">'tel'</span> },
                <span class="hljs-attr">code</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">'mask'</span>, <span class="hljs-attr">mask</span>: <span class="hljs-string">'aaa-9999'</span> },
                <span class="hljs-attr">assignedTo</span>: { <span class="hljs-attr">readableName</span>: <span class="hljs-string">'Assigned to employee'</span> },
                <span class="hljs-attr">preferences</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">'pillbox'</span> },
                <span class="hljs-attr">skill</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">'range'</span>, <span class="hljs-attr">min</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">max</span>: <span class="hljs-number">10</span> },
                <span class="hljs-attr">notes</span>: { <span class="hljs-attr">type</span>: <span class="hljs-string">'textarea'</span>, <span class="hljs-attr">style</span>: <span class="hljs-string">'markdown'</span> }
            }
        }
    }
});

<span class="hljs-built_in">module</span>.exports = Customer;</pre><h3 id="heading-disabling-fields"><a name="heading-disabling-fields">Disabling Fields</a></h3><p>You may disable any field by setting it to `disabled: true</p>
<h3 id="heading-disabling-the-entire-editor"><a name="heading-disabling-the-entire-editor">Disabling the Entire Editor</a></h3><p>If you need to completely disable the editor, add <code>enableDataEditor: false</code> in your <code>conf/default.js</code>‘s <code>admin</code> object.</p>
