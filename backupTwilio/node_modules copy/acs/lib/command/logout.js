'use strict';

var u = require ('../util.js'),
    querystring = require('querystring'),
    colors = require('colors'),
    logger = require('../logger.js'),
    request = require('request'),
    HandleResult = require('./handleResult');


function complete(cfg)
{
    var username= cfg.username;
    delete cfg.cookie;
    delete cfg.username;
    if(cfg.defaultEP) {
        cfg.publishHost = cfg.defaultEP.publishHost;
        cfg.publishPort = cfg.defaultEP.publishPort;
        delete cfg.defaultEP;
    }
    u.saveGlobalConfig(cfg);
    process.exit(0);
}

function loggedout()
{
    console.log('You have already been logged out.');
    process.exit(0);
}

function logout(cfg)
{
    if (!u.isOnline())
    {
        u.die("You must be connected to the Internet to login. No valid network interface detected.");
    }
    if (cfg.mid)
    {
        var cookie = cfg.cookie ? String(cfg.cookie).split(';')[0] || ['connect-sid',''].join('=') : '';

        var defaultConfig = u.getDefaultConfig(),
            proxy = u.getProxy();

        if(proxy) {
            logger.debug('ACS CLI is using proxy: ' + proxy.server);
            proxy = proxy.url;
        }
        if(cfg.publishHost) {
            console.log(String(('Admin Hostname: ' + cfg.publishHost).grey));
        }

        var url = (cfg.publishHost || defaultConfig.publishHost) + ':' +
            (cfg.publishPort || defaultConfig.publishPort) + '/logout';

        var HR = new HandleResult();
        HR.errorMessage = 'Logout failed';
        HR.errorHandler = function(){
            complete(cfg);
        };
        HR.succeed = function(response, result) {
            console.log(result.message);
            complete(cfg);
        };

        request({
            uri: encodeURI(url),
            method: 'GET',
            proxy: proxy,
            headers: {
                'Cookie': cookie,
                'Content-Type': 'application/x-www-form-urlencoded'
            }
        }, HR.handler);

    }
    else
    {
        complete(cfg);
    }
}

exports.run = function(args,opts)
{
    var cfg = u.getGlobalConfig();
    var username= cfg.username;
    if (username === undefined) {
        loggedout();
    } else {
        logout(cfg);
    }
};
