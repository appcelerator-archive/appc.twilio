'use strict';

var path = require('path'),
    util = require('../util'),
    fs = require('fs'),
    logger = require('../logger'),
    request = require('request'),
    HandleResult = require('./handleResult'),
    wrench = require('wrench');


function remove(args, program)
{
    var globalConfig = util.getGlobalConfig(),
        defaultConfig = util.getDefaultConfig(),
        proxy = util.getProxy();

    if(proxy) {
        logger.debug('ACS CLI is using proxy: ' + proxy.server);
        proxy = proxy.url;
    }
    if(globalConfig.publishHost && !program.isCallback) {
        console.log(String(('Admin Hostname: ' + globalConfig.publishHost).grey));
    }

    var cookie = globalConfig.cookie ? String(globalConfig.cookie).split(';')[0] || ['connect-sid',''].join('=') : '';

    if(program.force && !program.dir) {
        util.die('You must specify a folder with -d.');
    }

    var appname = util.getAppName(args, program);
    console.log('Remove app: ' + appname);

    var reqpath;
    if (appname) {
        reqpath = '/remove/' + appname;
    }

    var url = (globalConfig.publishHost || defaultConfig.publishHost) + ':' + (globalConfig.publishPort || defaultConfig.publishPort) + reqpath;

    var HR = new HandleResult();
    HR.reqParams=['remove', args, program];
    HR.checkResult = function(response, result) {
        var appFound = true;
        if (!result.success) {
            if(result.errcode === 201) {
                appFound = false;
            } else {
                util.die(result.message, result.errcode ? result.errcode : 1);
            }
        }

        if(!appFound) {
            logger.error(result.message);
        } else {
            console.log(result.message);
        }

        if(program.force) {
            var dir = program.dir;
            logger.info('Removing local dir: ' + dir);
            removeLocal(dir);
            console.log('Directory ' + dir + ' has been removed.');
        }
    };

    if(program.org) {
        url += ('?orgid=' + program.org);
    }

    request({
        uri: encodeURI(url),
        method: 'POST',
        proxy: proxy,
        headers: {
            'Cookie' : cookie,
            'Content-Type': 'application/x-www-form-urlencoded'
        }
    }, HR.handler);

}

exports.run = function(args,program)
{
    //var cfg = util.getGlobalConfig();
    //remove(args, cfg);
    remove(args, program);
};


function removeLocal(dir){
    // fs.rmdirSync(dir);
    wrench.rmdirSyncRecursive(dir,true);
}