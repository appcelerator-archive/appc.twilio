'use strict';

var util = require ('../util.js'),
    colors = require('colors'),
    program = require('commander'),
    request = require('request'),
    HandleResult = require('./handleResult'),
    logger = require('../logger.js');

function whoami(args, opts)
{
    var globalConfig = util.getGlobalConfig(),
        defaultConfig = util.getDefaultConfig(),
        proxy = util.getProxy();

    if(proxy) {
        logger.debug('ACS CLI is using proxy: ' + proxy.server);
        proxy = proxy.url;
    }
    if(globalConfig.publishHost && !opts.isCallback) {
        console.log(String(('Admin Hostname: ' + globalConfig.publishHost).grey));
    }

    var cookie = globalConfig.cookie ? String(globalConfig.cookie).split(';')[0] || ['connect-sid',''].join('=') : '';
    var reqpath = '/whoami';
    var url = (globalConfig.publishHost || defaultConfig.publishHost) + ':' + (globalConfig.publishPort || defaultConfig.publishPort) + reqpath;

    var HR = new HandleResult();
    HR.reqParams=['whoami', args, program];
    HR.succeed = function(response, result) {
        console.log();

        var format = opts.output;
        if(!format) {
            format = 'report';
        }

        if(format === 'json') {
            console.log(result.user);
            console.log();

        } else if(format === 'report') {
            if(result.user.username) {
                console.log('username\t', result.user.username);
            }
            console.log('email\t\t', result.user.email);
            if(result.user.firstname) {
                console.log('firstname\t', result.user.firstname);
            }
            if(result.user.lastname) {
                console.log('lastname\t', result.user.lastname);
            }
            if(result.user.hasOwnProperty('admin')) {
                console.log('admin\t\t', result.user.admin);
            }
            console.log();

            if(result.user.organization) {
                if(result.user.organization.length === 0) {
                    console.log('You do not belong to any organizations.');
                } else {
                    console.log('Organization(s) you belong to:\n');
                    var maxIdLen = 0, maxNameLen = 0;
                    result.user.organization.forEach(function(org) {
                        if(String(org.id).length > maxIdLen) {
                            maxIdLen = String(org.id).length;
                        }
                        if(org.name.length > maxNameLen) {
                            maxNameLen = org.name.length;
                        }
                    });
                    result.user.organization.forEach(function(org) {
                        console.log('ID: ', util.rpad(org.id, maxIdLen+5), 'Name: ', util.rpad(org.name, maxNameLen+5), 'Node.ACS Admin: ', org.node_acs_admin);

                    });
                    console.log();
                }
            }
        } else {
            util.die('Invalid value for option output: ' + format);
        }
    };

    request({
        uri: encodeURI(url),
        method: 'GET',
        proxy: proxy,
        headers: {
            'Cookie' : cookie,
            'Content-Type': 'application/x-www-form-urlencoded'
        }
    }, HR.handler);
}

exports.run = function(args,opts)
{
    whoami(args, opts);
};
