'use strict';

var util = require('../util.js'),
    logger = require('../logger.js'),
    fs = require('fs'),
    path = require('path'),
    uuid = require('node-uuid'),
    request = require('request'),
    HandleResult = require('./handleResult'),
    _ = require('underscore')._;

exports.run = function(args, program) {
    var p,
        url,
        globalConfig = util.getGlobalConfig(),
        defaultConfig = util.getDefaultConfig(),
        proxy = util.getProxy();

    if(proxy) {
        logger.debug('ACS CLI is using proxy: ' + proxy.server);
        proxy = proxy.url;
    }
    if(globalConfig.publishHost && !program.isCallback) {
        console.log(String(('Admin Hostname: ' + globalConfig.publishHost).grey));
    }

    // the command line argument will be treated as app name
    var username = null;
    if (args.length === 0) {
        console.log('Usage:');
        console.log('        acs su who');
        console.log("        acs su <userToSudo>");
        console.log('        acs su self');
        util.die('You must provide an argument to continue.');
    } else {
        username = args[0];
    }

    var cookie = globalConfig.cookie ? String(globalConfig.cookie).split(';')[0] || [ 'connect-sid', '' ].join('=') : '';

    p = '/sudo';

    if (username) {
        p += '/' + username;
    }

    url = (globalConfig.publishHost || defaultConfig.publishHost) + ':' + (globalConfig.publishPort || defaultConfig.publishPort) + p;

    var HR = new HandleResult();
    HR.reqParams=['su', args, program];
    HR.succeed = function(response, result) {
        console.log(result.message);
    };

    request({
        uri: encodeURI(url),
        method: 'GET',
        proxy: proxy,
        headers: {
            'Cookie': cookie,
            'Content-Type': 'application/x-www-form-urlencoded'
        }
    }, HR.handler);

};

