'use strict';

var u = require('../util.js'),
    logger = require('../logger.js'),
    fs = require('fs'),
    path = require('path'),
    _ = require('underscore')._
;

exports.run = function(args, opts) {
    if (args.length === 0) {
        u.die("'add' requires an additional argument 'name' which is the name of the service");
    }
    var name = args[0];

    var pattern = new RegExp(/^[^.]*$/);	//no '.' included
    var match = name.match(pattern);

    if(!match) {
        u.die("Service name cannot have dot('.')");
    }

    var projectdir = path.resolve(opts.dir || process.cwd());
    var cfg = u.readConfig(projectdir);

    if(!cfg || cfg.framework !== u.framework_mvc) {
        u.die('Cannot add new service to project with \'framework\' that is not \'mvc\' in package.json.');
    }

    var ctrldir = path.join(projectdir, 'controllers');
    if(!u.exists(ctrldir)) {
        fs.mkdirSync(ctrldir);
    } else {
        if(!fs.statSync(ctrldir).isDirectory()) {
            u.die('File \'' + ctrldir + '\' already exists, please make sure it is a directory.');
        }
    }
    var services = path.resolve(path.join(ctrldir, 'services.js'));
    var template = "\n" +
                   "function " + name + "(req, res) {\n" +
                   "\tres.send('Hello, world!');\n" +
                   "};\n";
    try {
        fs.appendFileSync(services, template);
    } catch (e) {
        console.log("Add new service failed: " + e.stack);
        return;
    }

    var configFile = path.resolve(path.join(projectdir, 'config.json'));
    var config = {};
    if(u.exists(configFile)) {
        config = JSON.parse(fs.readFileSync(configFile, 'utf-8'));
    }
    if(!_.isArray(config.routes)) {
        config.routes = [];
    }
    config.routes.push({path: '/' + name, method: 'get', callback: 'services#' + name});
    try {
        fs.writeFileSync(configFile, u.stringifyJSON(config), 'utf-8');
    } catch (e) {
        console.log("Add new service failed: " + e.stack);
        return;
    }
    console.log("New service added to " + services);
    console.log("Route added to " + configFile);
};
