'use strict';

var	logger = require('./logger');

var levels = ['FATAL', 'ERROR', 'WARN', 'INFO', 'DEBUG', 'TRACE', 'ALL'];
var logLevel = 'DEBUG';	//default log level is debug

//export different levels method
exports.fatal = function(message) {
    if (!allowLogging(logLevel, 'FATAL')) {
        return;
    }
    logger.error(message);
};

exports.error = function(message) {
    if (!allowLogging(logLevel, 'ERROR')) {
        return;
    }
    logger.error(message);
};

exports.warn = function(message) {
    if (!allowLogging(logLevel, 'WARN')) {
        return;
    }
    logger.warn(message);
};

exports.info = function(message) {
    if (!allowLogging(logLevel, 'INFO')) {
        return;
    }
    logger.info(message);
};

exports.debug = function(message) {
    if (!allowLogging(logLevel, 'DEBUG')) {
        return;
    }
    logger.debug(message);
};

exports.trace = function(message) {
    if (!allowLogging(logLevel, 'TRACE')) {
        return;
    }
    logger.debug(message);
};

exports.setLevel = function(level) {
    if (levels.indexOf(level) !== -1) {
        logLevel = level;
    }
};

function allowLogging(logLevel, level) {
    if (logLevel === 'OFF') {
        return false;
    }

    if(levels.indexOf(level) <= levels.indexOf(logLevel)) {
        return true;
    }

    return false;
}

