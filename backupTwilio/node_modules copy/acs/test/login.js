var should = require('should'),
    rewire = require('rewire'),
    sinon = require('sinon');

var loginModule = rewire('../lib/command/login');

var testUsername = 'ut@appcelerator.com',
    testUserPassword = 'password',
    testHost = 'admin.unittest.appcelerator.com';

var requestMock = function(options, handler) {

    var error = null;
    var response = {
        statusCode: 200,
        headers: {
            'set-cookie': 'fake-cookie'
        }
    };
    var body = {
        success: true,
        message: 'Welcome back, ' + testUsername + '! You are now logged in.'
    }

    handler(error, response, JSON.stringify(body));
}


describe('login cli - ', function() {
    this.timeout(20000);

    var outputs = [];

    before(function(done) {
        loginModule.__set__('request', requestMock);
        sinon.stub(console, 'log', function(msg) {
            outputs.push(msg);
        });

        done();
    });

    after(function(done) {
        console.log.restore();
        if(process.exit.restore) {
            process.exit.restore();
        }
        done();
    });

    //This is for https://jira.appcelerator.org/browse/NODEJS-1713
    it('should login and exit timely', function(done) {

        var args = [testUsername, testUserPassword];
        var opts = {
            host: testHost
        };

        sinon.stub(process, 'exit', function() {
            outputs[0].should.eql('Welcome back, ut@appcelerator.com! You are now logged in.');
            done();
        });

        loginModule.run(args, opts)
    });

});