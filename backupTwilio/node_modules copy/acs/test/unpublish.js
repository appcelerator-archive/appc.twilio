var should = require('should'),
    rewire = require('rewire'),
    sinon = require('sinon');

var unpublishModule = rewire('../lib/command/unpublish');

var requestMock = function(options, handler) {

    var error = null;
    var response = {
        statusCode: 200,
        headers: {
            'set-cookie': 'fake-cookie'
        }
    };
    var body = {
        success: true,
        message: 'unpublish done'
    }

    handler(error, response, JSON.stringify(body));
}


describe('unpublish cli - ', function() {
    this.timeout(20000);

    var outputs = [];

    before(function(done) {
        unpublishModule.__set__('request', requestMock);
        sinon.stub(console, 'log', function(msg) {
            outputs.push(msg);
        });

        done();
    });

    after(function(done) {
        console.log.restore();
        if(process.exit.restore) {
            process.exit.restore();
        }
        done();
    });

    //This is for https://jira.appcelerator.org/browse/NODEJS-1713
    it('should unpublish and exit timely', function(done) {

        var args = ['testApp'];
        var opts = {
        };

        sinon.stub(process, 'exit', function() {
            outputs[0].should.containEql('Admin Hostname: https://admin.unittest.appcelerator.com');
            outputs[1].should.eql('unpublish done');
            done();
        });

        unpublishModule.run(args, opts)

    });

});