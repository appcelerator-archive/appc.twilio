					{{#isGET}}
					var cachePolicy = (options && options.cachePolicy) || this.cachePolicy || SDK.cachePolicy,
						cacheHash = SDK.getCacheHash('{{method}}', url);
					// If we're using one of the policies that can use the cache...
					if (!!(cachePolicy.type & (SDK.Policy.CacheElseNetwork | SDK.Policy.CacheThenNetwork | SDK.Policy.CacheOnly))) {
						var cached = SDK.readCache(cacheHash);
						if (cached) {
							callback && callback(null, cached, null);
							// CacheElseNetwork or CacheOnly? Then we can return.
							if (cachePolicy.type !== SDK.Policy.CacheThenNetwork) {
								clean();
								return cached;
							}
							// CacheThenNetwork would carry on.
						}
						// CacheOnly will never hit the network; it wants to return, even if we don't find results.
						if (cachePolicy.type === SDK.Policy.CacheOnly) {
							callback && callback(new Error('No results have been cached yet.'), null, null);
							clean();
							return;
						}
					}
					{{/isGET}}
