/**
 * This code is closed source and Confidential and Proprietary to
 * Appcelerator, Inc. All Rights Reserved.  This code MUST not be
 * modified, copied or otherwise redistributed without express
 * written permission of Appcelerator. This file is licensed as
 * part of the Appcelerator Platform and governed under the terms
 * of the Appcelerator license agreement.
 */
var fs = require('fs'),
	path = require('path'),
	formats = [],
	formatters = {},
	extensions = {};

// these need to be in order of preference if a client doesn't have an accept header
['json', 'xml', 'csv', 'yaml', 'text', 'javascript'].forEach(function (type) {
	var fn = path.join(__dirname, type + '.js');
	var formatterModule = require(fn);
	formats.push(type);
	formatters[type] = formatterModule.format;
	if (formatterModule.extensions && Array.isArray(formatterModule.extensions)) {
		formatterModule.extensions.forEach(function (extension) {
			extensions[extension] = formatterModule.defaultMimeType;
		});
	} else {
		extensions[formatterModule.extensions || type] = formatterModule.defaultMimeType;
	}
});

module.exports.formats = formats;
module.exports.formatters = formatters;
module.exports.extensions = extensions;
