/**
 * This code is closed source and Confidential and Proprietary to
 * Appcelerator, Inc. All Rights Reserved.  This code MUST not be
 * modified, copied or otherwise redistributed without express
 * written permission of Appcelerator. This file is licensed as
 * part of the Appcelerator Platform and governed under the terms
 * of the Appcelerator license agreement.
 */

// jscs:disable jsDoc

var LdapAuth = require('ldapauth-fork');

function LDAPAuthStrategy(server) {
	this.config = server.config;
	this.prefix = this.config.apiPrefix;
	if (!/\/$/.test(this.prefix)) {
		this.prefix += '/';
	}
	this.auth = new LdapAuth(this.config.ldap);
}

LDAPAuthStrategy.prototype.matchURL = function (req) {
	// match all requests that are for our apis
	return req.url.indexOf(this.prefix) === 0;
};

LDAPAuthStrategy.prototype.validateRequest = function (req, resp, next) {
	var key = req.headers.authorization;
	if (!key) { return next(null, false); }

	var base64 = key.split(' ')[1];
	var usernamePassword = new Buffer(base64, 'base64').toString();

	var creds = usernamePassword.split(':');
	var username = creds[0];
	var password = creds[1];

	this.auth.authenticate(username, password, function (err, user) {
		if (err) {
			return next(null, false);
		}
		return next(null, true);
	});
};

LDAPAuthStrategy.prototype.applyCredentialsForTest = function (opts) {
	opts.auth = {
		username: 'einstein',
		password: 'password'
	};
};

module.exports = LDAPAuthStrategy;
