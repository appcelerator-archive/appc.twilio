/**
 * This code is closed source and Confidential and Proprietary to
 * Appcelerator, Inc. All Rights Reserved.  This code MUST not be
 * modified, copied or otherwise redistributed without express
 * written permission of Appcelerator. This file is licensed as
 * part of the Appcelerator Platform and governed under the terms
 * of the Appcelerator license agreement.
 */

// jscs:disable jsDoc

/**
 * this is a auth strategy which will use the Authorization
 * header where the key is the username and the password is
 * blank (as md5 digest of the two per the HTTP Basic Auth spec)
 */
function HeaderAuthBasicAuthStrategy(server) {
	this.config = server.config;
	this.prefix = this.config.apiPrefix;
	if (!/\/$/.test(this.prefix)) {
		this.prefix += '/';
	}
}

HeaderAuthBasicAuthStrategy.prototype.matchURL = function (req) {
	// match all requests that are for our apis
	return req.url.indexOf(this.prefix) === 0;
};

HeaderAuthBasicAuthStrategy.prototype.validateRequest = function (req, resp) {
	var key = req.headers.authorization;
	if (!key) { return false; }
	// username is APIKey value, password is blank
	var expected = 'Basic ' + new Buffer(this.config.apikey + ':').toString('base64');
	return expected === key;
};

HeaderAuthBasicAuthStrategy.prototype.applyCredentialsForTest = function (opts) {
	opts.auth = {
		username: this.config.apikey,
		password: '',
		sendImmediately: true
	};
};

module.exports = HeaderAuthBasicAuthStrategy;
