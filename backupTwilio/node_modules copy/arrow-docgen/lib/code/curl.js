// jscs:disable jsDoc

function generate(object, api, endpoint, opts) {
	var code = [];
	code.push('\n');
	code.push('\t### CURL Example for ' + endpoint.name);
	code.push('\tThis is an example you can run from command line using curl:');
	code.push('```curl');
	var cmd = 'curl ';
	if (endpoint.method !== 'GET') {
		cmd += '-is -X ' + endpoint.method + ' ';
	}
	if (object.server.auth) {
		if (object.server.auth.type === 'basic' || object.server.auth.type === 'ldap') {
			cmd += '-u ' + (object.server.auth.apikey || 'YOUR_APIKEY_GOES_HERE') + ':';
			cmd += ' ';
		} else if (object.server.auth.type === 'apikey') {
			cmd += '-H \'APIKey: ' + (object.server.auth.apikey || 'YOUR_APIKEY_GOES_HERE') + '\' ';
		}
	}
	cmd += '"';
	var idx = opts.url.indexOf('/:');
	if (idx > 0) {
		cmd += opts.url.substring(0, idx);
	} else {
		cmd += opts.url;
	}
	var q = [], b = [];
	endpoint.parameters && Object.keys(endpoint.parameters).forEach(function (k) {
		var param = endpoint.parameters[k];
		if (param.type === 'query') {
			var value = param.default || '';
			if (param.required || value) {
				q.push(param.name + '=' + value);
			}
		} else if (param.type === 'path') {
			cmd += '/' + param.name.toUpperCase();
		} else {
			b.push('"' + param.name + '":""');
		}
	});
	if (q.length) {
		cmd += '?' + q.join('&');
	}
	cmd += '"';

	if (b.length) {
		cmd += ' -d \'{' + b.join(',') + '}\'';
	}

	if (b.length) {
		cmd += ' -H "Content-Type: application/json" ';
	} else {
		cmd += ' ';
	}

	cmd += '```';
	code.push(cmd);
	return code.join('\n');
}

exports.generate = generate;
