'use strict';

var fs = require('fs'),
    path = require('path'),
    Swagger = require('openapi-doc'),
    nocache = require('nocache'),
    _require = require('./authz'),
    swaggerSecurity = _require.swaggerSecurity,
    basicAuth = _require.basicAuth,
    APIsAPI = require('./api/APIsAPI'),
    APIsController = require('./api/APIsController'),
    ConfigurationAPI = require('./config/ConfigurationAPI'),
    ConfigurationController = require('./config/ConfigurationController'),
    ConnectorsAPI = require('./connectors/ConnectorsAPI'),
    ConnectorsController = require('./connectors/ConnectorsController'),
    LogsAPI = require('./logs/LogsAPI'),
    LogsController = require('./logs/LogsController'),
    ModelsAPI = require('./models/ModelsAPI'),
    ModelsController = require('./models/ModelsController'),
    ProjectAPI = require('./project/ProjectAPI'),
    ProjectController = require('./project/ProjectController'),
    SystemAPI = require('./system/SystemAPI'),
    SystemController = require('./system/SystemController'),
    TestAPI = require('./testapi/TestAPI'),
    TestController = require('./testapi/TestController'),
    TimelineAPI = require('./timeline/TimelineAPI'),
    TimelineController = require('./timeline/TimelineController');


function configure(app, prefix, arrow, devmode, swagger) {
	arrow.logger.trace('configuring admin API, prefix: ', prefix);

	swagger = swagger || new Swagger();

	swagger.info('Arrow Admin API', '1.0', fs.readFileSync(path.join(__dirname, '../swaggerdoc.md'), 'utf8'));

	swagger.securityDefinition('basicAuth', {
		type: 'basic',
		description: 'Require authorized access to Arrow Admin APIs'
	}, basicAuth(arrow.config));

	swagger.security('basicAuth');

	var ctx = {
		app: app,
		prefix: prefix,
		arrow: arrow,
		devmode: devmode,
		swagger: swagger
	};

	// define swagger API for all endpoints
	APIsAPI.bind(new APIsController(ctx), ctx);
	ConfigurationAPI.bind(new ConfigurationController(ctx), ctx);
	ConnectorsAPI.bind(new ConnectorsController(ctx), ctx);
	LogsAPI.bind(new LogsController(ctx), ctx);
	ModelsAPI.bind(new ModelsController(ctx), ctx);
	ProjectAPI.bind(new ProjectController(ctx), ctx);
	SystemAPI.bind(new SystemController(ctx), ctx);
	TimelineAPI.bind(new TimelineController(ctx), ctx);
	TestAPI.bind(new TestController(ctx), ctx);

	// bind swagger APIs
	Object.keys(swagger.actions).forEach(function (endpoint) {
		Object.keys(swagger.actions[endpoint]).forEach(function (verb) {
			try {
				var ep = Swagger.endpointToExpress(prefix + endpoint);
				arrow.logger.debug('binding admin api (' + verb + ') ' + ep);
				app[verb](ep, nocache(), swaggerSecurity(swagger, verb, endpoint), swagger.actions[endpoint][verb]);
			} catch (ex) {
				arrow.logger.error(ex);
			}
		});
	});

	// bind API doc
	app.get('/api-doc', function (req, resp) {
		resp.send(swagger.apidoc());
	});

	arrow.logger.debug('arrow admin configured');
}

exports = module.exports = {
	configure: configure
};